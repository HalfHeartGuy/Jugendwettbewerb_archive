import sys
import pygame
import pygame.time
from pygame.locals import *
from datetime import datetime
import random,time
from random import randint

SCREEN_WIDTH = 1420
SCREEN_HEIGHT = 1024

surface = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

pygame.init()
green = (64,235,52)#
black = (0,0,0)
white = (255,255,255)
orange = (235,177,52)
red = (235,73,52)
blue = (52,95,235)
points = [(100,100),(200,100),(200,0)]
rect = (100,100,200,200)
grey = (216,218,227)
enemyMaxY = 1000
speed = 5
fps = 60
framePerSecond = pygame.time.Clock()
life = 3
counter = 10

pygame.time.set_timer(pygame.USEREVENT, 1000)
font = pygame.font.SysFont('Consolas', 30)
font2 = pygame.font.SysFont("Consolas", 30)
font3 = pygame.font.SysFont("Consolas",215)


run = True
gameover_text = "game over"
pygame.init()

surface.fill(grey)


pygame.display.set_caption("Hallo my guy")



pygame.draw.circle(surface, green, (300, 200), 30)
pygame.draw.rect(surface,blue,(100,0,100,50),0)
pygame.draw.line(surface,red,(100,100),(300,300), 10)
pygame.draw.lines(surface,white,True,points,10)
pygame.draw.ellipse(surface,red,rect,3)
pygame.draw.aaline(surface,green,(100,500),(200,700),100)
speed = 5

class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/48366.png")
        self.rect = self.image.get_rect()
        self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), 0)

    def move(self):
        self.rect.move_ip(0, 5)
        if (self.rect.bottom > enemyMaxY):
            self.rect.top = 0
            self.rect.center = (random.randint(30, 370), 0)
    def back_move(self):
        self.rect.move_ip(0,-900)
        self.rect.center = (random.randint(30, 370), 0)

    def draw(self, surface):
        surface.blit(self.image, self.rect)

class player1(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/36969.png")

        self.rect = self.image.get_rect()
        self.rect.center = (500,825)

    def move(self):
        pressed_keys = pygame.key.get_pressed()

        if self.rect.left > 0:
            if pressed_keys[K_LEFT]:
                self.image = pygame.image.load("Spiele_Materialien/JetLeft.png")

                self.rect.move_ip(-5,0)


        if self.rect.right < SCREEN_WIDTH:
            if pressed_keys[K_RIGHT]:
                self.rect.move_ip(5, 0)
                self.image = pygame.image.load("Spiele_Materialien/JetRight.png")



    def draw(self, surface):
        surface.blit(self.image, self.rect)

enemy1 = Enemy()
enemy2 = Enemy()
player1 = player1()
# Creating Sprites Groups
enemies = pygame.sprite.Group()
enemies.add(enemy1)
enemies.add(enemy2)
all_sprites = pygame.sprite.Group()
all_sprites.add(enemy1)
all_sprites.add(enemy2)
all_sprites.add(player1)
pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0/background.wav').play()

INC_SPEED = pygame.USEREVENT + 1

pygame.draw.polygon(surface,orange,points,10)

while True:
    print(datetime.now())

    pygame.display.update()
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == INC_SPEED:
            speed += 2
        if event.type == pygame.USEREVENT:
            counter -= 1
            if counter == 0:
                pygame.quit()
        if event.type == pygame.QUIT:
            run = False




    surface.fill(grey)
    for entity in all_sprites:
        surface.blit(entity.image, entity.rect)
        entity.move()
    if pygame.sprite.spritecollideany(player1, enemies):
        if life > 1:
            life -= 1

            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()

            text = str(life).rjust(3) if life > 0 else pygame.quit()
            enemy1.back_move()
            enemy2.back_move()




        else:
            surface.blit(font3.render(str(gameover_text), True, red), (160, 380))

            pygame.display.update()
            life -= 1

            for entity in all_sprites:
                entity.kill()

            time.sleep(2)
            sys.exit()



    enemy1.move()
    enemy1.draw(surface)
    enemy2.move()
    enemy2.draw(surface)
    player1.update()
    player1.draw(surface)

    surface.blit(font.render("timer:" + str(counter), True, (0, 0, 0)), (32, 48))
    surface.blit(font2.render("life:" + str(life), True, red), (200, 48))
    pygame.display.update()
    framePerSecond.tick(fps)

--------------------------------------------------------------------------------------------------------------------
Status:9.6.2022
import sys
import pygame
import pygame.time
from pygame.locals import *
from datetime import datetime
import random,time
import os
from random import randint

SCREEN_WIDTH = 1420
SCREEN_HEIGHT = 1024

surface = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

pygame.init()


green = (64,235,52)#
black = (0,0,0)
white = (255,255,255)
orange = (235,177,52)
red = (235,73,52)
blue = (52,95,235)
points = [(100,100),(200,100),(200,0)]
rect = (100,100,200,200)
grey = (216,218,227)
enemyMaxY = 1000
speed = 5
fps = 60
framePerSecond = pygame.time.Clock()
life = 3
counter = 10
MAX_SHOTS = 2
pygame.time.set_timer(pygame.USEREVENT, 1000)
font = pygame.font.SysFont('Consolas', 30)
font2 = pygame.font.SysFont("Consolas", 30)
font3 = pygame.font.SysFont("Consolas",215)


run = True
gameover_text = "game over"
pygame.init()

surface.fill(grey)


pygame.display.set_caption("Hallo my guy")



speed = 5

class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/48366.png")
        self.rect = self.image.get_rect()
        self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), 0)

    def move(self):
        self.rect.move_ip(0, 5)
        if (self.rect.bottom > enemyMaxY):
            self.rect.top = 0
            self.rect.center = (random.randint(30, 370), 0)
    def back_move(self):
        self.rect.move_ip(0,-900)
        self.rect.center = (random.randint(30, 370), 0)

    def draw(self, surface):
        surface.blit(self.image, self.rect)

class player1(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/36969.png")
        self.reloading = 0
        self.rect = self.image.get_rect()
        self.rect.center = (500,825)
        self.facing = -1


    def move(self):
        keystate = pygame.key.get_pressed()

        if self.rect.left > 0:
            if keystate[K_LEFT]:
                self.image = pygame.image.load("Spiele_Materialien/JetLeft.png")

                self.rect.move_ip(-5,0)

        if self.rect.right < SCREEN_WIDTH:
            if keystate[K_RIGHT]:
                self.rect.move_ip(5, 0)
                self.image = pygame.image.load("Spiele_Materialien/JetRight.png")
        if keystate[K_UP]:
            self.image = pygame.image.load("Spiele_Materialien/36969.png")

    def draw(self, surface):
        surface.blit(self.image, self.rect)
    gun_offset = -11
    def gunpos(self):
        pos = self.facing * self.gun_offset + self.rect.centerx
        return pos, self.rect.top
class Shot(pygame.sprite.Sprite):
    """a bullet the Player sprite fires."""

    speed = -11
    images = []

    def __init__(self, pos):
        pygame.sprite.Sprite.__init__(self, self.containers)
        self.image = pygame.image.load("Spiele_Materialien/shot.gif")
        self.rect = self.image.get_rect(midbottom=pos)

    def update(self):
        print("Hello World")
        self.rect.move_ip(0, self.speed)
        if self.rect.top <= 0:
            self.kill()

# Initialize Game Groups

shots = pygame.sprite.Group()
all = pygame.sprite.RenderUpdates()
Shot.containers = shots, all

#shots.containers = shots,all
#shots = pygame.sprite.Group()


enemy1 = Enemy()
enemy2 = Enemy()
player1 = player1()
# Creating Sprites Groups
enemies = pygame.sprite.Group()
enemies.add(enemy1)
enemies.add(enemy2)
all_sprites = pygame.sprite.Group()
all_sprites.add(enemy1)
all_sprites.add(enemy2)
all_sprites.add(player1)
pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0/background.wav').play()

INC_SPEED = pygame.USEREVENT + 1


while player1.alive():
   # print(datetime.now())

    pygame.display.update()
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == INC_SPEED:
            speed += 2
        if event.type == pygame.USEREVENT:
            counter -= 1
            if counter == 0:
                pygame.quit()
        if event.type == pygame.QUIT:
            run = False






    surface.fill(grey)
    for entity in all_sprites:
        surface.blit(entity.image, entity.rect)
        entity.move()
    if pygame.sprite.spritecollideany(player1, enemies):
        if life > 1:
            life -= 1

            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()

            text = str(life).rjust(3) if life > 0 else pygame.quit()
            enemy1.back_move()
            enemy2.back_move()




        else:
            surface.blit(font3.render(str(gameover_text), True, red), (160, 380))

            pygame.display.update()
            life -= 1

            for entity in all_sprites:
                entity.kill()

            time.sleep(2)
            sys.exit()


    enemy1.move()
    enemy1.draw(surface)
    enemy2.move()
    enemy2.draw(surface)
    player1.update()
    player1.draw(surface)

    surface.blit(font.render("timer:" + str(counter), True, (0, 0, 0)), (32, 48))
    surface.blit(font2.render("life:" + str(life), True, red), (200, 48))
    pygame.display.update()
    framePerSecond.tick(fps)
    keystate = pygame.key.get_pressed()

    firing = keystate[pygame.K_SPACE]
    #print("Hello World")

    if not player1.reloading and firing and len(shots) < MAX_SHOTS:


        Shot(player1.gunpos())
    player1.reloading = firing
    all.update()
    dirty = all.draw(surface)
    pygame.display.update(dirty)
--------------------------------------------------------------------------------------------------------------------
Stand:9.6.2022 17:14
import sys
import pygame
import pygame.time
from pygame.locals import *
from datetime import datetime
import random,time
import os
from random import randint

SCREEN_WIDTH = 1420
SCREEN_HEIGHT = 1024

surface = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

pygame.init()


green = (64,235,52)#
black = (0,0,0)
white = (255,255,255)
orange = (235,177,52)
red = (235,73,52)
blue = (52,95,235)
points = [(100,100),(200,100),(200,0)]
rect = (100,100,200,200)
grey = (216,218,227)
enemyMaxY = 1000
speed = 5
fps = 60
framePerSecond = pygame.time.Clock()
life = 3
counter = 10
MAX_SHOTS = 2
pygame.time.set_timer(pygame.USEREVENT, 1000)
font = pygame.font.SysFont('Consolas', 30)
font2 = pygame.font.SysFont("Consolas", 30)
font3 = pygame.font.SysFont("Consolas",215)


run = True
gameover_text = "game over"
pygame.init()

surface.fill(grey)


pygame.display.set_caption("Hallo my guy")




class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/48366.png")
        self.rect = self.image.get_rect()
        self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), 0)

    def move(self):
        self.rect.move_ip(0, 5)
        if (self.rect.bottom > enemyMaxY):
            self.rect.top = 0
            self.rect.center = (random.randint(30, 370), 0)
    def back_move(self):
        self.rect.move_ip(0,-900)
        self.rect.center = (random.randint(30, 370), 0)

    def draw(self, surface):
        surface.blit(self.image, self.rect)

class player1(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/36969.png")
        self.reloading = 0
        self.rect = self.image.get_rect()
        self.rect.center = (500,825)
        self.facing = -1


    def move(self):
        keystate = pygame.key.get_pressed()

        if self.rect.left > 0:
            if keystate[K_LEFT]:
                self.image = pygame.image.load("Spiele_Materialien/JetLeft.png")

                self.rect.move_ip(-5,0)

        if self.rect.right < SCREEN_WIDTH:
            if keystate[K_RIGHT]:
                self.rect.move_ip(5, 0)
                self.image = pygame.image.load("Spiele_Materialien/JetRight.png")
        if keystate[K_UP]:
            self.image = pygame.image.load("Spiele_Materialien/36969.png")

    def draw(self, surface):
        surface.blit(self.image, self.rect)
    gun_offset = -11
    def gunpos(self):
        pos = self.facing * self.gun_offset + self.rect.centerx
        return pos, self.rect.top
class Shot(pygame.sprite.Sprite):
    """a bullet the Player sprite fires."""

    speed = -11

    def __init__(self, pos):
        pygame.sprite.Sprite.__init__(self, self.containers)
        self.image = pygame.image.load("Spiele_Materialien/player1.gif")
        self.rect = self.image.get_rect(midbottom=pos)

    def update(self):
        print("Hello World")
        self.rect.move_ip(0, self.speed)
        if self.rect.top <= 0:
            self.kill()

# Initialize Game Groups

shots = pygame.sprite.Group()
all = pygame.sprite.RenderUpdates()
Shot.containers = shots, all

#shots.containers = shots,all
#shots = pygame.sprite.Group()


enemy1 = Enemy()
enemy2 = Enemy()
player1 = player1()
# Creating Sprites Groups
enemies = pygame.sprite.Group()
enemies.add(enemy1)
enemies.add(enemy2)
all_sprites = pygame.sprite.Group()
all_sprites.add(enemy1)
all_sprites.add(enemy2)
all_sprites.add(player1)
pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0/background.wav').play()

INC_SPEED = pygame.USEREVENT + 1


while player1.alive():
   # print(datetime.now())

    pygame.display.update()
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == INC_SPEED:
            speed += 2
        if event.type == pygame.USEREVENT:
            counter -= 1
            if counter == 0:
                pygame.quit()
        if event.type == pygame.QUIT:
            run = False






    surface.fill(grey)
    for entity in all_sprites:
        surface.blit(entity .image, entity.rect)
        entity.move()
    if pygame.sprite.spritecollideany(player1, enemies):
        if life > 1:
            life -= 1

            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()

            text = str(life).rjust(3) if life > 0 else pygame.quit()
            enemy1.back_move()
            enemy2.back_move()




        else:
            surface.blit(font3.render(str(gameover_text), True, red), (160, 380))

            pygame.display.update()
            life -= 1

            for entity in all_sprites:
                entity.kill()

            time.sleep(2)
            sys.exit()


    enemy1.move()
    enemy1.draw(surface)
    enemy2.move()
    enemy2.draw(surface)
    player1.update()
    player1.draw(surface)

    surface.blit(font.render("timer:" + str(counter), True, (0, 0, 0)), (32, 48))
    surface.blit(font2.render("life:" + str(life), True, red), (200, 48))
    framePerSecond.tick(fps)
    keystate = pygame.key.get_pressed()

    firing = keystate[pygame.K_SPACE]
    #print("Hello World")

    if not player1.reloading and firing and len(shots) < MAX_SHOTS:


        Shot(player1.gunpos())

    player1.reloading = firing

    dirty = all.draw(surface)
    all.update()
    pygame.display.update(dirty)




-------------------------------------------------------------------------------------------
Stand:9.6.2022 22:06
import sys
import pygame
import pygame.time
from pygame.locals import *
from datetime import datetime
import random,time
import os
from random import randint

SCREEN_WIDTH = 1420
SCREEN_HEIGHT = 1024

surface = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

pygame.init()


green = (64,235,52)#
black = (0,0,0)
white = (255,255,255)
orange = (235,177,52)
red = (235,73,52)
blue = (52,95,235)
points = [(100,100),(200,100),(200,0)]
rect = (100,100,200,200)
grey = (216,218,227)
enemyMaxY = 1000
speed = 5
fps = 60
framePerSecond = pygame.time.Clock()
life = 3
counter = 60
MAX_SHOTS = 5
score = 0
pygame.time.set_timer(pygame.USEREVENT, 1000)
font = pygame.font.SysFont('Consolas', 30)
font2 = pygame.font.SysFont("Consolas", 30)
font3 = pygame.font.SysFont("Consolas",215)
font4 = pygame.font.SysFont('Consolas', 30)


run = True
gameover_text = "game over"
pygame.init()

surface.fill(grey)


pygame.display.set_caption("Hallo my guy")




class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/48366.png")
        self.rect = self.image.get_rect()
        self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), 0)

    def move(self):
        self.rect.move_ip(0, 5)
        if (self.rect.bottom > enemyMaxY):
            self.rect.top = 0
            self.rect.center = (random.randint(30, 370), 0)
    def back_move(self):
        self.rect.move_ip(0,-900)
        self.rect.center = (random.randint(30, 370), 0)

    def draw(self, surface):
        surface.blit(self.image, self.rect)

class player1(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/36969.png")
        self.reloading = 0
        self.rect = self.image.get_rect()
        self.rect.center = (500,825)
        self.facing = -1


    def move(self):
        keystate = pygame.key.get_pressed()

        if self.rect.left > 0:
            if keystate[K_LEFT]:
                self.image = pygame.image.load("Spiele_Materialien/JetLeft.png")

                self.rect.move_ip(-5,0)

        if self.rect.right < SCREEN_WIDTH:
            if keystate[K_RIGHT]:
                self.rect.move_ip(5, 0)
                self.image = pygame.image.load("Spiele_Materialien/JetRight.png")
        if keystate[K_UP]:
            self.image = pygame.image.load("Spiele_Materialien/36969.png")

    def draw(self, surface):
        surface.blit(self.image, self.rect)
    gun_offset = -11
    def gunpos(self):
        pos = self.facing * self.gun_offset + self.rect.centerx
        return pos, self.rect.top
class Shot(pygame.sprite.Sprite):
    """a bullet the Player sprite fires."""

    speed = -11

    def __init__(self, pos):
        pygame.sprite.Sprite.__init__(self, self.containers)
        self.image = pygame.image.load("Spiele_Materialien/shot.gif")
        self.rect = self.image.get_rect(midbottom=pos)

    def update(self):
        print("Hello World")
        self.rect.move_ip(0, self.speed)
        if self.rect.top <= 0:
            self.kill()
class Bomb(pygame.sprite.Sprite):
    """a bullet the Player sprite fires."""

    speed = 9

    def __init__(self, pos):
        pygame.sprite.Sprite.__init__(self, self.containers)
        self.image = pygame.image.load("Spiele_Materialien/bomb.gif")
        self.rect = self.image.get_rect(midbottom=pos)

    def update(self):
        print("Hello World")
        self.rect.move_ip(0, self.speed)
        if self.rect.top <= 0:
            self.kill()
# Initialize Game Groups

shots = pygame.sprite.Group()
all = pygame.sprite.RenderUpdates()
Shot.containers = shots, all

#shots.containers = shots,all
#shots = pygame.sprite.Group()


enemy1 = Enemy()
enemy2 = Enemy()
player1 = player1()
# Creating Sprites Groups
enemies = pygame.sprite.Group()
enemies.add(enemy1)
enemies.add(enemy2)
all_sprites = pygame.sprite.Group()
all_sprites.add(enemy1)
all_sprites.add(enemy2)
all_sprites.add(player1)
pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0/background.wav').play()

INC_SPEED = pygame.USEREVENT + 1


while player1.alive():
   # print(datetime.now())

    pygame.display.update()
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == INC_SPEED:
            speed += 2
        if event.type == pygame.USEREVENT:
            counter -= 1
            if counter == 0:
                pygame.quit()
        if event.type == pygame.QUIT:
            run = False






    surface.fill(grey)
    for entity in all_sprites:
        surface.blit(entity .image, entity.rect)
        entity.move()
    if pygame.sprite.spritecollideany(player1, enemies):
        if life > 1:
            life -= 1

            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()

            text = str(life).rjust(3) if life > 0 else pygame.quit()
            enemy1.back_move()
            enemy2.back_move()




        else:
            surface.blit(font3.render(str(gameover_text), True, red), (160, 380))

            pygame.display.update()
            life -= 1

            for entity in all_sprites:
                entity.kill()

            time.sleep(2)
            sys.exit()


    enemy1.move()
    enemy1.draw(surface)
    enemy2.move()
    enemy2.draw(surface)
    player1.update()
    player1.draw(surface)

    surface.blit(font.render("timer:" + str(counter), True, (0, 0, 0)), (32, 48))
    surface.blit(font2.render("life:" + str(life), True, red), (200, 48))
    surface.blit(font4.render("score:" + str(score), True, blue), (900, 40))

    framePerSecond.tick(fps)
    keystate = pygame.key.get_pressed()

    firing = keystate[pygame.K_SPACE]
    #print("Hello World")

    if not player1.reloading and firing and len(shots) < MAX_SHOTS:
        pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\car_door.wav').play()

        Shot(player1.gunpos())

    player1.reloading = firing

    dirty = all.draw(surface)
    all.update()
    pygame.display.update(dirty)

    for enemy in enemies:
        if pygame.sprite.spritecollideany(enemy, shots):
            score += 1
            for shot in shots:
                shot.kill()

            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()
            text = str(life).rjust(3) if life > 0 else pygame.quit()


---------------------------------------------------------------------------------------------------------------------
Pygame Dokumentation:
First you have to install pygame.
Go to settings -> python interpreter -> then search pygame and install it
The second step is to import pygame.
Example:import pygame
There are also other imports examples are os,time.



How to code:
First you have to init pygame that means you have to do the following code:
pygame.init()
So python ecognizes that the code is pygame now.

The next step is to say pygame what to do while it is running.(Not the kind of running what people do).
For this a while loop is needed.
while "(mostly used is true for the first steps)"
Then it is very IMPORTANT to write an : after the line.
example:while True
---------------------------------------------------------------------------------------------------------------------
Stand:15.06.22 22:54




import sys
import pygame
import pygame.time
from pygame.locals import *
from datetime import datetime
import random,time
import os
from random import randint

SCREEN_WIDTH = 1420
SCREEN_HEIGHT = 1024

surface = pygame.display.set_mode((SCREEN_WIDTH, SCREEN_HEIGHT))

pygame.init()


green = (64,235,52)#
black = (0,0,0)
white = (255,255,255)
orange = (235,177,52)
red = (235,73,52)
blue = (52,95,235)
points = [(100,100),(200,100),(200,0)]
rect = (100,100,200,200)
grey = (216,218,227)
enemyMaxY = 1000
speed = 5
fps = 60
framePerSecond = pygame.time.Clock()
life = 3
counter = 60
MAX_SHOTS = 5
score = 0
pygame.time.set_timer(pygame.USEREVENT, 1000)
font = pygame.font.SysFont('Consolas', 30)
font2 = pygame.font.SysFont("Consolas", 30)
font3 = pygame.font.SysFont("Consolas",215)
font4 = pygame.font.SysFont('Consolas', 30)
BOMB_ODDS = 60
SCREENRECT = pygame.Rect(0, 0, SCREEN_WIDTH, SCREEN_HEIGHT)



run = True
gameover_text = "game over"
pygame.init()

surface.fill(grey)


pygame.display.set_caption("Game")




class Enemy(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/Enemy.png")
        self.rect = self.image.get_rect()
        self.rect.center = (random.randint(40, SCREEN_WIDTH - 40), 0)
        self.facing_direction_right = 5
        self.facing_direction_left = -5

        self.twoscenario_randommizer = random.randint(0,1)

    def move(self):

        if self.twoscenario_randommizer == 0:

            self.rect.move_ip(self.facing_direction_right, 0)
            if self.rect.right > SCREEN_WIDTH:
                self.rect.move_ip(0,100)
                if (self.rect.bottom > enemyMaxY):
                    self.rect.top = 0
                    self.rect.center = (random.randint(0, SCREEN_WIDTH), 0)
                self.facing_direction_right = -5
            if self.rect.left < 0:
                self.rect.move_ip(0,100)
                if (self.rect.bottom > enemyMaxY):
                    self.rect.top = 0
                    self.rect.center = (random.randint(0, SCREEN_WIDTH), 0)
                self.facing_direction_right = 5
        if self.twoscenario_randommizer == 1:

            self.rect.move_ip(self.facing_direction_left, 0)
            if self.rect.right > SCREEN_WIDTH:
                self.rect.move_ip(0,100)
                if (self.rect.bottom > enemyMaxY):
                    self.rect.top = 0
                    self.rect.center = (random.randint(0, SCREEN_WIDTH), 0)
                self.facing_direction_left = -5
            if self.rect.left < 0:
                self.rect.move_ip(0,100)
                if (self.rect.bottom > enemyMaxY):
                    self.rect.top = 0
                    self.rect.center = (random.randint(0, SCREEN_WIDTH), 0)
                self.facing_direction_left = 5











    def back_move(self):
        self.rect.move_ip(0,-900)
        self.rect.center = (random.randint(30, 370), 0)

    def draw(self, surface):
        surface.blit(self.image, self.rect)
class player1(pygame.sprite.Sprite):
    def __init__(self):
        super().__init__()
        self.image = pygame.image.load("Spiele_Materialien/Jet.png")
        self.reloading = 0
        self.rect = self.image.get_rect()
        self.rect.center = (500,825)
        self.facing = -1
        self.rect.top = 800

    def move(self):
        keystate = pygame.key.get_pressed()

        if self.rect.left > 0:
            if keystate[K_LEFT]:
                self.image = pygame.image.load("Spiele_Materialien/JetLeft.png")

                self.rect.move_ip(-5,0)

        if self.rect.right < SCREEN_WIDTH:
            if keystate[K_RIGHT]:
                self.rect.move_ip(5, 0)
                self.image = pygame.image.load("Spiele_Materialien/JetRight.png")
        if keystate[K_UP]:
            self.image = pygame.image.load("Spiele_Materialien/Jet.png")

    def draw(self, surface):
        surface.blit(self.image, self.rect)
    gun_offset = -11
    def gunpos(self):
        pos = self.facing * self.gun_offset + self.rect.centerx
        return pos, self.rect.top


class shotLeft(pygame.sprite.Sprite):
    def __init__(self,pos):
        pygame.sprite.Sprite.__init__(self,self.containers)
        self.image = pygame.image.load("Spiele_materialien/shot.gif")
        self.rect = self.image.get_rect(midbottom=pos)
        self.speed = -11

    def update(self):
        self.rect.move_ip(0, self.speed)
        self.rect.move_ip(self.speed,0)
        if self.rect.top <= 100:
            self.kill()
class shotRight(pygame.sprite.Sprite):
    def __init__(self,pos):
        pygame.sprite.Sprite.__init__(self,self.containers)
        self.image = pygame.image.load("Spiele_materialien/shot.gif")
        self.rect = self.image.get_rect(midbottom=pos)
        self.speed = -11

    def update(self):
        self.rect.move_ip(0, self.speed)
        self.rect.move_ip(self.speed * -1,0)
        if self.rect.top <= 1:
            self.kill()


class Shot(pygame.sprite.Sprite):

    speed = -11

    def __init__(self, pos):
        pygame.sprite.Sprite.__init__(self, self.containers)
        self.image = pygame.image.load("Spiele_Materialien/shot.gif")
        self.rect = self.image.get_rect(midbottom=pos)

    def update(self):
        self.rect.move_ip(0, self.speed)
        if self.rect.top <= 0:
            self.kill()

class Bomb(pygame.sprite.Sprite):
    """a bullet the Player sprite fires."""

    speed = 9

    def __init__(self, pos):
        pygame.sprite.Sprite.__init__(self, self.containers)
        self.image = pygame.image.load("Spiele_Materialien/player1.png")
        self.rect = self.image.get_rect(midbottom=pos)

    def update(self):
        self.rect.move_ip(0, self.speed)
        if self.rect.top >= SCREEN_HEIGHT:
            self.kill()
# Initialize Game Groups





shots = pygame.sprite.Group()
shotsright = pygame.sprite.Group()
shotsleft = pygame.sprite.Group()
all = pygame.sprite.RenderUpdates()
lastalien = pygame.sprite.GroupSingle()

Shot.containers = shots, all
bombs = pygame.sprite.Group()
Bomb.containers = bombs,all
shotRight.containers = shotsright, all
shotLeft.containers = shotsleft,all

#shots.containers = shots,all
#shots = pygame.sprite.Group()

enemy1 = Enemy()
enemy2 = Enemy()
player1 = player1()
# Creating Sprites Groups
enemies = pygame.sprite.Group()
enemies.add(enemy1)
enemies.add(enemy2)
all_sprites = pygame.sprite.Group()
all_sprites.add(enemy1)
all_sprites.add(enemy2)
all_sprites.add(player1)
pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0/background.wav').play()

INC_SPEED = pygame.USEREVENT + 1




while player1.alive():
   # print(datetime.now())

    pygame.display.update()
    for event in pygame.event.get():
        if event.type == QUIT:
            pygame.quit()
            sys.exit()
        if event.type == INC_SPEED:
            speed += 2
        if event.type == pygame.USEREVENT:
            counter -= 1
            if counter == 0:
                pygame.quit()
        if event.type == pygame.QUIT:
            run = False





    surface.fill(white)
    for entity in all_sprites:
        surface.blit(entity .image, entity.rect)
        entity.move()
    if pygame.sprite.spritecollideany(player1, enemies):
        if life > 1:
            life -= 1

            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()

            text = str(life).rjust(3) if life > 0 else pygame.quit()
            enemy1.back_move()
            enemy2.back_move()




        else:
            surface.blit(font3.render(str(gameover_text), True, red), (160, 380))

            pygame.display.update()
            life -= 1

            for entity in all_sprites:
                entity.kill()

            time.sleep(2)
            sys.exit()


    enemy1.move()
    enemy1.draw(surface)
    enemy2.move()
    enemy2.draw(surface)
    player1.update()
    player1.draw(surface)

    surface.blit(font.render("timer:" + str(counter), True, (0, 0, 0)), (32, 48))
    surface.blit(font2.render("life:" + str(life), True, red), (200, 48))
    surface.blit(font4.render("score:" + str(score), True, blue), (900, 40))

    framePerSecond.tick(fps)
    keystate = pygame.key.get_pressed()
    mode = 0
    firing = keystate[pygame.K_SPACE]
    cap_timing = random.randint(0,2)
    if cap_timing == 1:
        cap = 1
    else:
        cap = 0
    #print("Hello World")
    if keystate[pygame.K_q]:
        if mode == 0:
            mode += 1
        else:
            mode -= 1
    if mode == 0:
        if not player1.reloading and firing and len(shots) < MAX_SHOTS :
            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\car_door.wav').play()
            if keystate[pygame.K_SPACE]:

                Shot(player1.gunpos())
    if mode == 1:
        if not player1.reloading and firing and len(shots) < MAX_SHOTS and cap != 0:
            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\car_door.wav').play()
            Shot(player1.gunpos())
            shotRight(player1.gunpos())
            shotLeft(player1.gunpos())
            cap -= 1


    player1.reloading = firing
    if lastalien and not int(random.random() * BOMB_ODDS):
        Bomb(lastalien.sprite)

    dirty = all.draw(surface)

    all.update()
    pygame.display.update(dirty)

    for enemy in enemies:
        if pygame.sprite.spritecollideany(enemy, shots):
            score += 1
            for shot in shots:
                shot.kill()
            enemy.kill()
            enemy.image = pygame.image.load("Spiele_Materialien/Enemy2.png")


            pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()
            text = str(life).rjust(3) if life > 0 else pygame.quit()
    if pygame.sprite.spritecollideany(player1,bombs):
        life -= 1

        pygame.mixer.Sound('D:\pygame\Spiele_Materialien\PygameTutorial_3_0\crash.wav').play()

        text = str(life).rjust(3) if life > 0 else pygame.quit()



